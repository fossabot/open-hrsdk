#!/usr/bin/env python
PACKAGE = 'hr_msgs'
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()


bone_names = [
    ['brow_dot_L','Brow Outer Left (up)'],
    ['brow_dot_inner_dot_L','Brow Inner Left (up)'],
    ['brow_dot_C','Brow Center  (up)'],
    ['brow_dot_inner_dot_R','Brow Inner Right (up)'],
    ['brow_dot_R','Brow Outer Right (up)'],
    ['eyelid_UP_L','Eylid Upper Left (open)'],
    ['eyelid_UP_R','Eyelid Upper Right (open)'],
    ['eyelid_LO_L','Eyelid Lower Left (open)'],
    ['eyelid_LO_R','Eyelid Lower Right (open)'],
    ['cheek_L','Cheek Squint Left', 0.0, 1.0],
    ['cheek_R','Cheeck Squint Right', 0.0, 1.0],
    ['nostril_L','Sneer Left', 0.0, 1.0],
    ['nostril_R','Sneer Right', 0.0, 1.0],
    ['mouth_U_L','Smile Left', 0.0, 1.0],
    ['mouth_U_R','Smile Right', 0.0, 1.0],
    ['lip_U_L','Upper Lip Left (up)'],
    ['lip_U','Upper Lip Center (up)'],
    ['lip_U_R','Upper Lip Right (up)'],
    ['mouth_C_L','EE Left (wide)'],
    ['mouth_C_R','EE Right (wide)'],
    ['lip_D_L','Lower Lip Left (down)'],
    ['lip_D','Lower Lip Center (down)'],
    ['lip_D_R','Lowe Lip Right (down)'],
    ['mouth_D_L','Frown Left',0.0,1.0],
    ['mouth_D_R','Frown Right',0.0,1.0],
    ['chin','Jaw',0.0,1.0],
]

expression_presets =  ['', 'amused', 'angry', 'awe', 'bored', 'comprehending', 'confused', 'contempt', 'disgust', 'engaged', 'fear', 'happy', 'happy.001', 'happy.002', 'happy.003', 'irritated', 'recoil', 'sad', 'surprised', 'worry','OTHER']
expression_enum = gen.enum([gen.const("Expression{}".format(i), str_t, ex,ex.title() or '-') for i, ex in enumerate(expression_presets)], 'ExpressionsPresets')
gen.add('expression_name', str_t, 0, 'Expression', '', edit_method=expression_enum)
gen.add('other_name', str_t, 0, 'Name of the other expression')
gen.add('preview', bool_t,0, "Live Preview on the robot", False)
for b in bone_names:
    name, desc, bmin, bmax = b[0], b[1], -1,1
    if len(b) == 4:
        bmin = b[2]
        bmax = b[3]
    gen.add("bone_{}".format(name), double_t, 0, desc, 0, bmin, bmax)
gen.add('save_this', bool_t,0, "Save Current ", False)
gen.add('save_all', bool_t,0, "Save All Changed", False)
gen.add('cancel', bool_t,0, "Restore from last saved", False)
# package name, node name, config name
exit(gen.generate(PACKAGE, "blender_api", "Expressions"))
